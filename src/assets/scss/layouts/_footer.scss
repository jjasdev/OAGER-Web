@use '../utils/funciones' as fn;
@use '../utils/variables' as var;
@use '../utils/mixins' as mx;

/* Footer */
.footer {
    @include mx.createFlex(column, flex-start, center);

    &__svg {
        margin-bottom: fn.pxTorem(-8px);
        &-path {
            fill:var(--color-background-primary);
        }

        &-polygon {
            fill:var(--color-background-terciary);
        }
    }

    &__main {
        padding: fn.pxTorem(50px) fn.pxTorem(100px); 
        background-color: var(--color-background-primary);
        @include mx.createGrid(16px,
                                repeat(2,auto),
                                auto 1fr,
                                'cert-logos cert-texto'
                                'office-img office-texto') {
            width: 100%;
        }
        @include mx.addBreakpoint('medium') {
            padding: fn.pxTorem(50px) fn.pxTorem(50px);
            @include mx.createFlex(column, center, center) {
                gap: fn.pxTorem(16px);
                text-align: center;
            };
        } 
        @include mx.addBreakpoint('small') {
            padding: fn.pxTorem(50px) fn.pxTorem(30px); 
        } 
    }

    &__logos {
        @include mx.createFlex(row, flex-end, center) {
            gap: fn.pxTorem(16px);
        };
        @include mx.addBreakpoint('medium') {
            justify-content: center;
        }

        &--padding-top {
            @include mx.addBreakpoint('medium') {
                padding-top: fn.pxTorem(16px);
            }            
        }
    }

    &__image {
        max-width: fn.pxTorem(80px);        
        aspect-ratio: 1 / 1;
        filter: grayscale(1);

        &--circle {
            border-radius: 50%;
        }

        &:hover {
            transform: scale(1.2);
            filter: grayscale(0);
            @include mx.addTransition(transform);
        }
    }

    &__texto{
        align-self: center;
        p {
            color: rgba(var.getColor('color-light'), 0.8);
            font-weight: 300;
        }
            
    }

    &__link {
        font-weight: 700;

        &:hover {
            color: var(--color-primary);
        }
    }

    &__list {
        color: rgba(var.getColor('color-light'), 0.8);
        font-weight: 300;
    }

    &__links {
        padding: fn.pxTorem(32px) fn.pxTorem(100px); 
        background-color: var(--color-background-footer);
        @include mx.createFlex(row, space-between, center) {
            gap: fn.pxTorem(16px);
        };
        @include mx.addBreakpoint('xlarge') {
            flex-direction: column;            
        }
        @include mx.addBreakpoint('medium') {
            padding: fn.pxTorem(32px) fn.pxTorem(50px);
        } 
        @include mx.addBreakpoint('small') {
            padding: fn.pxTorem(32px) fn.pxTorem(30px); 
        }
    }

    &__nav {
        @include mx.createFlex(row, flex-end, center, auto);
        @include mx.addBreakpoint('medium') {
            flex-direction: column;
            justify-content: center;
        } 
        &-item {
            padding: 0 fn.pxTorem(16px);
            border-right: 1px solid rgba(var.getColor('color-border'), 0.5); 
            color: rgba(var.getColor('color-light'), 0.8);
            @include mx.addBreakpoint('medium') {
                text-transform: uppercase;
                padding: 0;
                border-right: 0;
            } 

            &:last-child {
                border-right: none;
            }
        }
    }

    &__copy {
        @include mx.addBreakpoint('small') {
            text-align: center;
        } 
        &-oager {
            color: var(--color-primary);
        }
    }
}